* DONE Fix WAVE/MP3 formats to support MP3 audio in a WAVE container
  Instead of WaveAudio generating a nasty "compression not supported" error,
  its is_type() classmethod should return False.
  And, MP3Audio's is_type() classmethod should check for MP3 compressed
  RIFF WAVE containers.
  This isn't likely to mess up decoding, but may confuse ID3 tagging.
* DONE Allow file template to be specified on the command line
  When making new files with track2track, cd2track, etc.
* DONE Update the website with the latest documentation
* DONE Allow a unified %(album_track_number)s file template field
  If there's no album number, it's simply 2 digits of track number.
  Otherwise, it's a combination of the two fields.
  For example, album_number = 2 and track_number = 13 results in
  "213" for a value.
* DONE Update trackcat to take a cuesheet argument when outputting FLACs
  Thus, one can perform:
  trackcat --cuesheet=file.cue file1.wav file2.wav file3.wav -t flac -o cd.flac
  which will embed "file.cue" into "cd.flac" using metaflac.
  Though no other format I'm aware of supports this kind of cuesheet handling,
  being able to easily build solid disc images of a single FLAC file
  is much of the reason for trackcat/tracksplit.
* DONE Don't remove undone tracklint entries from its undo DB
  Since its checksum will change anyway and no longer match,
  explicitly removing the entry is no longer necessary
* TODO Support interleaved Ogg streams
  An Ogg file can, theoretically, contain multiple streams
  (e.g. Vorbis audio and some sort of video)
  The current implementation of the various Ogg handlers
  (Vorbis, Speex, Ogg FLAC) tends to assume files are audio-only.
* DONE Support FLAC padding
  If changes to FLAC metadata are small enough, write over the
  padding (if present) rather than rewrite the whole file - like metaflac.
  This approach should speed up tagging considerably.
* TODO [#A] Fix FAAC's M4A support
  If faac is built without working libmp4v2 support,
  m4a winds up completely broken since the current implementation
  only modifies an existing Quicktime container.
  So, if faac builds no container, the resulting file is unsupportable.
* TODO Fix image support in ID3v2
  Very large images can take a very long time to load.
* DONE Fix programs to key on album number and track number
  Certain programs, such as trackcmp, work on tracks across two directories
  and key on track number to determine which to compare to which.
  These need to be updated to use both track number and album number.
* DONE Adjust wave conversions to use album number, if present
  For example, converting track_number 15 and album_number 2 to WAVE
  should make a file "track215.cdda.wav" which then properly converts
  back to track_number 15 and album_number 2 if read.

* TODO Improve XMCD handling
  Support for XMCD files often breaks down if one or more tracks
  are missing.
  In some cases, there's no fix to be had (track2xmcd)
  but in most instances it should be made to work correctly.
* TODO Add more examples
  A lot of handy new features aren't documented with examples and walkthroughs.
  Examples to add include:
- [ ] a full multi-CD example, detailing the use of --album-number
- [ ] an image embedding walkthrough
- [ ] examples of how -d,--format,-o work together for different results
* TODO More graceful handling of broken files
  A lot of the track handlers assume that once the start of the file is good,
  the rest of it is following the spec.  This is not always the case.
  There needs to be sanity checks such that if a file is wildly wrong,
  sensible errors result rather than throwing an ugly pyconstruct exception.
* DONE Perform type inference wherever possible
  Anything with a single output file (trackcat and record2track)
  should be able to infer its output type from the track suffix, if possible.

* TODO Add "comment" field support to all metadata types
* TODO Fix ID3v2 image support to handle Unicode descriptions
  The current implementation falls down on UTF-16 input,
  but I should have a solution from the COMM frame handler.

* TODO Limit ID3v2.2/2.3 to UCS-2 encoding
  The current implementation treats UCS-2 the same as UTF-16.
  This needs to be fixed so that really high unicode characters
  (above U+FFFF) are replaced with something within spec.


* TODO Unify ID3v2 frame handling
  In the beginning, there were text frames and Everything Else.
  Text frames were unicode strings,
  and Everything Else was a binary string of whatever.
  Now that ID3 is cluttered with APIC frames and COMM frames that need
  special treatment, ID3v2 needs an overhaul to more resemble FlacMetaData.

