#!/usr/bin/python

#Audio Tools, a module and set of tools for manipulating audio data
#Copyright (C) 2007  Brian Langenberger

#This program is free software; you can redistribute it and/or modify
#it under the terms of the GNU General Public License as published by
#the Free Software Foundation; either version 2 of the License, or
#(at your option) any later version.

#This program is distributed in the hope that it will be useful,
#but WITHOUT ANY WARRANTY; without even the implied warranty of
#MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#GNU General Public License for more details.

#You should have received a copy of the GNU General Public License
#along with this program; if not, write to the Free Software
#Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA


import sys
import audiotools
import os.path,optparse

def blank_metadata(track, xmcd):
    return audiotools.MetaData()

def track_metadata(track, xmcd):
    return track.get_metadata()

def xmcd_metadata(track, xmcd):
    metadata = xmcd[track.track_number()]
    if (metadata != None):
        return metadata
    else:
        return audiotools.MetaData()

def xmcd_track_metadata(track, xmcd):
    xmcd_metadata = xmcd[track.track_number()]
    if (xmcd_metadata != None):
        #xmcd data overwrites whatever comes from track
        #(so longs as it's not blank)
        track_metadata = track.get_metadata()

        for field in ('track_name','track_number','album_name',
                      'artist_name','performer_name','copyright',
                      'year'):
            if (getattr(xmcd_metadata,field) != u""):
                setattr(track_metadata,field,
                        getattr(xmcd_metadata,field))
        return track_metadata
    else:
        return track.get_metadata()

if (__name__ == '__main__'):
    parser = optparse.OptionParser(
        "%prog [-x XMCD file] <track 1> [track 2] ...",
        version="Python Audio Tools %s" % (audiotools.VERSION))

    parser.add_option('--name',
                      action='store',
                      type='string',
                      dest='track_name',
                      help="the name of the track")

    parser.add_option('--number',
                      action='store',
                      type='int',
                      dest='track_number',
                      help="the number of the track in the album")
    
    parser.add_option('--album',
                      action='store',
                      type='string',
                      dest='album_name',
                      help='the name of the album')

    parser.add_option('--artist',
                      action='store',
                      type='string',
                      dest='artist_name',
                      help='the name of the artist')

    parser.add_option('--performer',
                      action='store',
                      type='string',
                      dest='performer_name',
                      help='the name of the performer')

    parser.add_option('--copyright',
                      action='store',
                      type='string',
                      dest='copyright',
                      help='copyright information')

    parser.add_option('--year',
                      action='store',
                      type='string',
                      dest='year',
                      help='the year of release')

    parser.add_option('-r','--replace',
                      action='store_true',
                      default=False,
                      dest='replace',
                      help='completely replace all metadata')

    parser.add_option('-x','--xmcd',
                      action='store',
                      type='string',
                      dest='xmcd')

    (options,args) = parser.parse_args()
    audiofiles = audiotools.open_files(args)

    if (options.xmcd != None):
        try:
            xmcd = audiotools.parse_xmcd_file(options.xmcd)
        except audiotools.XMCDException:
            print >>sys.stderr,"*** Error opening XMCD file \"%s\"" % \
                  (options.xmcd)
            sys.exit(1)
    else:
        xmcd = None

    if (options.replace):
        if (xmcd == None):
            metadata_function = blank_metadata
        else:
            metadata_function = xmcd_metadata
    else:
        if (xmcd == None):
            metadata_function = track_metadata
        else:
            metadata_function = xmcd_track_metadata
            

    for file in audiofiles:
        metadata = metadata_function(file, xmcd)

        if (metadata is not None):
            for field in ('track_name','track_number','album_name',
                          'artist_name','performer_name','copyright',
                          'year'):
                if (getattr(options,field) != None):
                    attr = getattr(options,field)
                    if (isinstance(attr,str)):
                        attr = attr.decode(audiotools.IO_ENCODING)
                    setattr(metadata,field,attr)

            file.set_metadata(metadata)

                
