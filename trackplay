#!/usr/bin/python

#Audio Tools, a module and set of tools for manipulating audio data
#Copyright (C) 2007  Brian Langenberger

#This program is free software; you can redistribute it and/or modify
#it under the terms of the GNU General Public License as published by
#the Free Software Foundation; either version 2 of the License, or
#(at your option) any later version.

#This program is distributed in the hope that it will be useful,
#but WITHOUT ANY WARRANTY; without even the implied warranty of
#MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#GNU General Public License for more details.

#You should have received a copy of the GNU General Public License
#along with this program; if not, write to the Free Software
#Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA


import audiotools,optparse
import sys,ossaudiodev

if (__name__ == '__main__'):
    parser = optparse.OptionParser(
        "%prog <track 1> [track 2] ...",
        version="Python Audio Tools %s" % (audiotools.VERSION))

    (options,args) = parser.parse_args()

    dev = ossaudiodev.open("w")

    try:
        for audiofile in audiotools.open_files(args,sorted=False):
            pcm = audiofile.to_pcm()
            if (pcm.bits_per_sample == 16):
                fmt = ossaudiodev.AFMT_S16_LE
            elif (pcm.bits_per_sample == 8):
                fmt = ossaudiodev.AFMT_U8
            else:
                print >>sys.stderr,"*** Unsupported bit depth %s" % \
                    (pcm.bits_per_sample)
                continue

            dev.setparameters(fmt,
                              pcm.channels,
                              pcm.sample_rate)
            bytes = pcm.read(audiotools.BUFFER_SIZE)
            while (len(bytes) > 0):
                dev.writeall(bytes)
                bytes = pcm.read(audiotools.BUFFER_SIZE)

            pcm.close()
    finally:
        dev.close()
